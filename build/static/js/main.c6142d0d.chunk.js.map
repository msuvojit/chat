{"version":3,"sources":["settings/theme.js","Pages/Chat/Chat.jsx","Config/FireBase.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","green","secondary","sec","useAvatarStyles","makeStyles","root","width","props","size","height","margin","backgroundColor","backgroundRepeat","backgroundPosition","backgroundSize","borderRadius","display","flexDirection","justifyContent","alignItems","fontSize","Avatar","avatar","classes","type","className","style","color","textColor","text","backgroundImage","img","useFileDisplayStyles","border","maxWidth","borderColor","padding","icon","name","marginRight","overflow","wordBreak","textOverflow","FileDisplay","file","ns","split","file_name","length","substring","Button","variant","component","href","download","target","rel","socket","useChatBubbleStyles","borderBottomLeftRadius","left","borderBottomRightRadius","float","info","marginTop","title","fontWeight","sub","ChatBubble","children","time","right","date","hours","getHours","minutes","getMinutes","ampm","formatAMPM","getDateStr","Date","toLocaleDateString","year","month","day","useMessageStyles","position","dateContainer","marginBottom","dateBox","transform","msgWrap","Message","Fragment","toString","useStyles","outerCard","paddingLeft","paddingRight","minHeight","minWidth","maxHeight","cardActions","flexShrink","sendButton","paddingTop","paddingBottom","marginLeft","altButton","sendMessage","messageCard","overflowY","flexGrow","header","top","grow","restart","emojiContainer","bottom","ChatUI","uid","messages","message","showEmoji","setState","saveImageMessage","saveMessage","smallToken","meetingDetails","styles","chatName","dSmallToken","patientName","pSmallToken","doctorName","firstCharChatName","charAt","toUpperCase","useState","open","setOpen","symp","setSymp","hist","setHist","medi","setMedi","test","setTest","followUp","setFollowUp","previewOpen","setPreviewOpen","handleClose","Paper","Card","CardContent","id","map","data","index","today","createdAt","yday","key","sentBy","sending","FormControl","fullWidth","FilledInput","value","onKeyDown","e","console","log","onChange","placeholder","Tooltip","onClick","Dialog","onClose","should","DialogTitle","textAlign","DialogContent","dividers","DialogContentText","TextField","autoFocus","label","DialogActions","htmlToImage","toPng","document","getElementById","then","dataUrl","link","createElement","click","fileUpload","dataurl","filename","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","base64ToFile","multiple","files","API_ENDPOINT","Chat","scrollToBottom","scrollIntoView","behavior","block","addMessage","state","isSending","filter","m","new_message","getDetails","a","token","params","axios","post","result","channel","room","io","emit","error","on","users","getMessages","response","uploadFile","fileType","fileName","config","method","url","headers","signedRequest","putConfig","FormData","append","isLoading","res","saveFile","get","messageText","this","bind","React","Component","firebase","Firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","App","utils","DateFnsUtils","ThemeProvider","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c6142d0d.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport sec from \"@material-ui/core/colors/blueGrey\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n        secondary: sec\r\n    }\r\n});\r\n\r\nexport default theme;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  Paper,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  FilledInput,\r\n  InputAdornment,\r\n  FormControl,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport AttachIcon from '@material-ui/icons/AttachFile';\r\nimport CameraIcon from '@material-ui/icons/CameraAlt';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport BackIcon from '@material-ui/icons/ArrowBack';\r\nimport SmileIcon from '@material-ui/icons/Mood';\r\nimport DownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nimport green from '@material-ui/core/colors/green';\r\nimport sec from '@material-ui/core/colors/blueGrey';\r\n// import firebase from \"firebase\";\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport io from 'socket.io-client';\r\n\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport htmlToImage from 'html-to-image';\r\n\r\nconst useAvatarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: (props) => (props.size ? props.size : '50px'),\r\n    height: (props) => (props.size ? props.size : '50px'),\r\n    margin: `calc(1/5 * ${(props) => (props.size ? props.size : '50px')})`,\r\n    backgroundColor: '#ddd',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    borderRadius: '50%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: `calc(4/5 * ${(props) => (props.size ? props.size : '50px')})`,\r\n  },\r\n}));\r\n\r\nconst Avatar = ({ avatar, size }) => {\r\n  const classes = useAvatarStyles({ size: size });\r\n  if (avatar.type === 'text')\r\n    return (\r\n      <div\r\n        className={classes.root}\r\n        style={{ backgroundColor: avatar.color, color: avatar.textColor }}\r\n      >\r\n        {avatar.text}\r\n      </div>\r\n    );\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={{ backgroundImage: `url(${avatar.img ? avatar.img : avatar})` }}\r\n    />\r\n  );\r\n};\r\n\r\nconst useFileDisplayStyles = makeStyles((theme) => ({\r\n  root: {\r\n    border: '1px black solid',\r\n    maxWidth: '100%',\r\n    borderColor: (props) =>\r\n      props && props.textColor ? props.textColor : 'black',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    color: (props) =>\r\n      props && props.textColor && props.textColor !== 'black'\r\n        ? props.textColor\r\n        : '#555',\r\n  },\r\n  name: {\r\n    color: (props) =>\r\n      props && props.textColor && props.textColor !== 'black'\r\n        ? props.textColor\r\n        : '#555',\r\n    marginRight: '0',\r\n    height: '22px',\r\n    // maxWidth: \"80%\",\r\n    overflow: 'hidden',\r\n    wordBreak: 'break-all',\r\n    textOverflow: 'ellipses',\r\n  },\r\n}));\r\n\r\nconst downloadFile = ({ filePath }) => {\r\n  window.location.href = filePath;\r\n};\r\n\r\nconst FileDisplay = ({ file, textColor, name }) => {\r\n  if (typeof file !== 'object') file = { file: file, name: name || file };\r\n\r\n  const classes = useFileDisplayStyles({ textColor: textColor });\r\n  const ns = file.name ? file.name.split('/') : '';\r\n  let file_name = name\r\n    ? name\r\n    : ns.length > 0\r\n    ? ns[ns.length - 1]\r\n    : 'Uploading...';\r\n  file_name =\r\n    file_name.length > 33 ? file_name.substring(0, 30) + '...' : file_name;\r\n  return (\r\n    <Button\r\n      variant=\"outlined\"\r\n      className={classes.root}\r\n      component=\"a\"\r\n      href={file.file || ''}\r\n      download\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <div className={classes.name}>{file_name}</div>\r\n      <DownloadIcon className={classes.icon} />\r\n    </Button>\r\n  );\r\n};\r\n\r\n// const FileDisplay = ({ file, textColor }) => {\r\n//   if (typeof file !== \"object\") file = { name: file };\r\n\r\n//   const classes = useFileDisplayStyles({ textColor: textColor });\r\n//   return (\r\n//     <Button variant=\"outlined\" className={classes.root}>\r\n//       {/* <div className={classes.name}>{file.name}</div> */}\r\n//       <div className={classes.name}>\r\n//         <a href={file.name} download target=\"_blank\" rel=\"noopener noreferrer\">\r\n//           <img src={\"/assets/images/attach.svg\"} alt=\"attachment\" height=\"22\" />\r\n//         </a>\r\n//         {/* <p>{file.name}</p> */}\r\n//       </div>\r\n//       {/* <DownloadIcon className={classes.icon} /> */}\r\n//     </Button>\r\n//   );\r\n// };\r\n\r\nfunction formatAMPM(date) {\r\n  var hours = date.getHours();\r\n  var minutes = date.getMinutes();\r\n  var ampm = hours >= 12 ? 'pm' : 'am';\r\n  hours = hours % 12;\r\n  hours = hours ? hours : 12; // the hour '0' should be '12'\r\n  minutes = minutes < 10 ? '0' + minutes : minutes;\r\n  var strTime = hours + ':' + minutes + ' ' + ampm;\r\n  return strTime;\r\n}\r\n\r\nconst useChatBubbleStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: (props) =>\r\n      !(props && props.color)\r\n        ? 'white'\r\n        : props.color === 'primary' || props.color === 'secondary'\r\n        ? theme.palette[props.color][100]\r\n        : props.color,\r\n    color: (props) => (props && props.textColor ? props.textColor : 'black'),\r\n    maxWidth: '70%',\r\n    padding: '15px',\r\n    borderRadius: '15px',\r\n    borderBottomLeftRadius: (props) => (props && props.left ? 0 : null),\r\n    borderBottomRightRadius: (props) => (props && !props.left ? 0 : null),\r\n    float: (props) => (props && props.left ? null : 'right'),\r\n    'overflow-wrap': 'break-word',\r\n    width: 'fit-content',\r\n  },\r\n  info: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'flex-end',\r\n    marginTop: '7px',\r\n  },\r\n  title: {\r\n    fontWeight: 500,\r\n    marginRight: '50px',\r\n    fontSize: '17px',\r\n    color: (props) => (props && props.textColor ? props.textColor : 'black'),\r\n  },\r\n  sub: {\r\n    fontWeight: 300,\r\n    fontSize: '14px',\r\n    color: (props) => (props && props.textColor ? props.textColor : 'black'),\r\n  },\r\n}));\r\n\r\nconst ChatBubble = ({\r\n  children,\r\n  time,\r\n  name,\r\n  left,\r\n  right,\r\n  color,\r\n  textColor,\r\n}) => {\r\n  const isLeft = left || !right;\r\n  const classes = useChatBubbleStyles({\r\n    color: color,\r\n    left: isLeft,\r\n    textColor: textColor,\r\n    'overflow-wrap': 'break-word',\r\n  });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {children}\r\n      {!time ? null : (\r\n        <div className={classes.info}>\r\n          {/* <div className={classes.title}>{name}</div> */}\r\n          <div className={classes.sub}>{formatAMPM(time)}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getDateStr = (date) => {\r\n  const date_t = new Date(date);\r\n  // console.log(\"DATE: \", date, date_t);\r\n  return date_t.toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'numeric',\r\n    day: 'numeric',\r\n  });\r\n  // const date_p = date.split('T')[0].split('-');\r\n  // const day = date_p[2];\r\n  // const month = date_p[1];\r\n  // const year = date_p[0];\r\n  // return `${day}/${month}/${year}`;\r\n};\r\n\r\nconst useMessageStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: (props) => (props && props.left ? 'row' : 'row-reverse'),\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    margin: '10px',\r\n    position: 'relative',\r\n  },\r\n  dateContainer: {\r\n    width: '100%',\r\n    position: 'relative',\r\n    marginBottom: '60px',\r\n  },\r\n  dateBox: {\r\n    position: 'absolute',\r\n    left: '50%',\r\n    transform: 'translateX(-50%)',\r\n    padding: '12px',\r\n    backgroundColor: '#eee',\r\n    fontWeight: 300,\r\n    borderRadius: '10px',\r\n  },\r\n  msgWrap: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nconst Message = ({\r\n  children,\r\n  left,\r\n  right,\r\n  name,\r\n  time,\r\n  color,\r\n  textColor,\r\n  avatar,\r\n  date,\r\n}) => {\r\n  const isLeft = left || !right;\r\n  const classes = useMessageStyles({ left: isLeft });\r\n  return (\r\n    <React.Fragment>\r\n      {!date ? null : (\r\n        <div className={classes.dateContainer}>\r\n          <div className={classes.dateBox}>\r\n            {date.toString()}\r\n            {/* <Moment format=\"hh:mm\">{moment(date, \"hh:mm a\")}</Moment> */}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className={classes.root}>\r\n        <div className={classes.msgWrap}>\r\n          {/* {avatar} */}\r\n          <ChatBubble\r\n            left={left}\r\n            right={right}\r\n            name={name}\r\n            time={time}\r\n            color={color}\r\n            textColor={textColor}\r\n          >\r\n            {children}\r\n          </ChatBubble>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst avatar_dr = (\r\n  <Avatar\r\n    size=\"32px\"\r\n    avatar={{ type: 'text', text: 'M', color: 'purple', textColor: 'white' }}\r\n  />\r\n);\r\nconst avatar_andy = (\r\n  <Avatar\r\n    size=\"32px\"\r\n    avatar={{ type: 'text', text: 'A', color: '#ddd', textColor: 'black' }}\r\n  />\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.primary[50],\r\n    height: '100vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'stretch',\r\n  },\r\n  '@media screen and (min-width: 738px)': {\r\n    root: {\r\n      alignItems: 'center',\r\n    },\r\n  },\r\n  outerCard: {\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    minHeight: '80vh',\r\n    minWidth: '50vw',\r\n    maxHeight: '100vh',\r\n    backgroundColor: '#eee',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    width: '100vw',\r\n  },\r\n  cardActions: {\r\n    flexShrink: '1',\r\n    display: 'flex',\r\n    width: '100%',\r\n    backgroundColor: '#eee',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  sendButton: {\r\n    color: 'white',\r\n    paddingTop: 'auto',\r\n    paddingBottom: 'auto',\r\n    margin: '10px',\r\n    marginLeft: 0,\r\n  },\r\n  altButton: {\r\n    paddingTop: 'auto',\r\n    paddingBottom: 'auto',\r\n    paddingLeft: '5px',\r\n    paddingRight: '5px',\r\n    margin: '10px',\r\n    marginLeft: 0,\r\n    minWidth: '0',\r\n  },\r\n  sendMessage: {\r\n    '& .MuiFilledInput-input': {\r\n      paddingTop: '10px',\r\n    },\r\n    margin: '10px',\r\n  },\r\n  messageCard: {\r\n    backgroundColor: '#FCEBDC',\r\n    overflowY: 'auto',\r\n    flexGrow: '1',\r\n    minHeight: '75%',\r\n    // maxHeight: \"90vh\",\r\n  },\r\n  title: {\r\n    fontSize: '16px',\r\n    marginLeft: '5px',\r\n  },\r\n  header: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    color: '#777',\r\n    padding: '10px',\r\n    backgroundColor: '#eee',\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    'z-index': 99999,\r\n  },\r\n  grow: {\r\n    flexGrow: '1',\r\n  },\r\n  restart: {\r\n    marginRight: '20px',\r\n  },\r\n  emojiContainer: {\r\n    position: 'relative',\r\n    '& .emoji-picker-react': {\r\n      position: 'absolute',\r\n      bottom: 0,\r\n      right: 0,\r\n    },\r\n  },\r\n})); // Defines Styles with MaterialUI Styling\r\nvar LOADING_IMAGE_URL = 'https://www.google.com/images/spin-32.gif?a';\r\n\r\nconst ChatUI = ({\r\n  uid,\r\n  messages,\r\n  showEmoji,\r\n  message,\r\n  setState,\r\n  saveImageMessage,\r\n  saveMessage,\r\n  smallToken,\r\n  meetingDetails,\r\n}) => {\r\n  const styles = useStyles();\r\n\r\n  let chatName = '';\r\n\r\n  if (smallToken === meetingDetails.dSmallToken) {\r\n    chatName = meetingDetails.patientName;\r\n  } else if (smallToken === meetingDetails.pSmallToken) {\r\n    chatName = meetingDetails.doctorName;\r\n  }\r\n\r\n  let firstCharChatName =\r\n    chatName.charAt(0) && chatName.charAt(0).toUpperCase();\r\n\r\n  // console.log('-----------------');\r\n  // console.log({ firstCharChatName });\r\n  // console.log('-----------------');\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [symp, setSymp] = useState(\"\");\r\n  const [hist, setHist] = useState(\"\");\r\n  const [medi, setMedi] = useState(\"\");\r\n  const [test, setTest] = useState(\"\");\r\n  const [followUp, setFollowUp] = useState(\"\");\r\n\r\n  const [previewOpen, setPreviewOpen] = useState(false);\r\n  \r\n  const handleClickOpen = () => {\r\n    setSymp(\"\");\r\n    setHist(\"\");\r\n    setMedi(\"\");\r\n    setTest(\"\");\r\n    setFollowUp(\"\");\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const prevClose = () => {\r\n    setSymp(\"\");\r\n    setHist(\"\");\r\n    setMedi(\"\");\r\n    setTest(\"\");\r\n    setFollowUp(\"\");\r\n    setPreviewOpen(false);\r\n  };\r\n\r\n  const preview = () => {\r\n    setOpen(false);\r\n    setPreviewOpen(true);\r\n  }\r\n\r\n  const sendRx= (e) => {\r\n    e.preventDefault();\r\n    console.log(symp);\r\n    console.log(hist);\r\n    console.log(medi);\r\n    console.log(test);\r\n    setSymp(\"\");\r\n    setHist(\"\");\r\n    setMedi(\"\");\r\n    setTest(\"\");\r\n    setFollowUp(\"\");\r\n    setPreviewOpen(false);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setPreviewOpen(false);\r\n    setOpen(true);\r\n  };\r\n\r\n  const base64ToFile = (dataurl, filename) => {\r\n \r\n    var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]), \r\n        n = bstr.length, \r\n        u8arr = new Uint8Array(n);\r\n        \r\n    while(n--){\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    \r\n    return new File([u8arr], filename, {type:mime});\r\n}\r\n\r\n// var file = dataURLtoFile('data:text/plain;base64,aGVsbG8gd29ybGQ=','hello.txt');\r\n// console.log(file);\r\n\r\n  const printdoc = () =>  {\r\n    htmlToImage.toPng(document.getElementById('pres'))\r\n  .then(function (dataUrl) {\r\n    var link = document.createElement('a');\r\n    link.download = 'prescription.png';\r\n    link.href = dataUrl;\r\n    link.click();\r\n    // console.log(link.href);\r\n    const fileUpload = base64ToFile(link.href, 'prescription.png');\r\n    saveImageMessage(fileUpload);\r\n  });\r\n  \r\n  setPreviewOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.root}>\r\n      <Paper className={styles.outerCard}>\r\n        <div className={styles.header}>\r\n          {/* <IconButton onClick={() => {}}>\r\n            <BackIcon />\r\n          </IconButton> */}\r\n          {/* {avatar_andy} */}\r\n\r\n          <Avatar\r\n            size=\"32px\"\r\n            avatar={{\r\n              type: 'text',\r\n              text: firstCharChatName,\r\n              color: '#ddd',\r\n              textColor: 'black',\r\n            }}\r\n          />\r\n          <div className={styles.title}>{chatName}</div>\r\n\r\n          <div className={styles.grow} />\r\n\r\n          {/* <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            className={styles.restart}\r\n          >\r\n            <RestoreIcon />\r\n          </Button> */}\r\n\r\n          {/* <IconButton>\r\n            <CloseIcon />\r\n          </IconButton> */}\r\n        </div>\r\n        <Card className={styles.messageCard}>\r\n          <CardContent>\r\n            <div\r\n              id=\"chatList\"\r\n              className={styles.messages}\r\n              style={{ paddingBottom: '50px', paddingTop: '50px' }}\r\n            >\r\n              {messages.map((data, index) => {\r\n                const today = getDateStr(data.createdAt);\r\n                const yday =\r\n                  index > 0 && getDateStr(messages[index - 1].createdAt);\r\n                // console.log('Today Raw', data.createdAt);\r\n                // console.log(\r\n                //   'Yday Raw',\r\n                //   index > 0 && messages[index - 1].createdAt\r\n                // );\r\n                // console.log('Today', today);\r\n                // console.log('YDay', yday);\r\n                // console.log('Eq', today == yday);\r\n                // console.log('Eq Eq', today === yday);\r\n                return (\r\n                  <Message\r\n                    key={index}\r\n                    // time={ new Date(data.createdAt) }\r\n                    date={index > 0 && today === yday ? null : today}\r\n                    left={!(data.sentBy === uid) && !data.sending}\r\n                    right={data.sentBy === uid || data.sending}\r\n                    name={data.name}\r\n                    // time={data.timestamp}\r\n                    avatar={data.avatar}\r\n                    color={\r\n                      data.sending\r\n                        ? '#ffe3e3'\r\n                        : data.sentBy === uid\r\n                        ? 'primary'\r\n                        : null\r\n                    }\r\n                    textColor={'black'}\r\n                  >\r\n                    {!data.file ? (\r\n                      data.text\r\n                    ) : (\r\n                      <FileDisplay\r\n                        name={data.text}\r\n                        file={data.file}\r\n                        textColor={'black'}\r\n                      />\r\n                    )}\r\n                  </Message>\r\n                );\r\n              })}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n        {/* {showEmoji ? (\r\n            <div className={styles.emojiContainer} ref={emojiRef}>\r\n              <EmojiPicker\r\n                className={styles.emojiPicker}\r\n                onEmojiClick={(e, emoji) => addToMessage(emoji.emoji)}\r\n              />\r\n            </div>\r\n          ) : null} */}\r\n        <div\r\n          className={styles.cardActions}\r\n          style={{ position: 'fixed', bottom: 0 }}\r\n          // onSubmit={(e) => {\r\n          //   e.preventDefault();\r\n          //   loadMessages();\r\n          //   if (message.length === 0) return;\r\n\r\n          //   saveMessage(message);\r\n          // }}\r\n        >\r\n          {/* <TextField className={styles.sendMessage} value={message} onChange={({target: {value}})=>setMessage(value)} fullWidth variant=\"filled\" placeholder=\"Message\" /> */}\r\n          <FormControl fullWidth variant=\"filled\">\r\n            <FilledInput\r\n              type=\"text\"\r\n              className={styles.sendMessage}\r\n              value={message}\r\n              onKeyDown={(e) => {\r\n                console.log(e.key);\r\n                if (e.key === 'Enter') {\r\n                  if (message.length === 0) return;\r\n                  saveMessage(message);\r\n                }\r\n              }}\r\n              onChange={({ target: { value } }) => setState({ message: value })}\r\n              placeholder=\"Type a message\"\r\n              // endAdornment={\r\n              //   <InputAdornment position=\"end\">\r\n              //     <IconButton\r\n              //       size=\"small\"\r\n              //       onClick={() => {\r\n              //         setState({ showEmoji: !showEmoji });\r\n              //       }}\r\n              //     >\r\n              //       <SmileIcon />\r\n              //     </IconButton>\r\n              //   </InputAdornment>\r\n              // }\r\n            />\r\n          </FormControl>\r\n          <Tooltip title=\"Click To Open Rx\">\r\n            <Button\r\n              className={styles.altButton}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Rx\r\n            </Button>\r\n          </Tooltip>\r\n          <div>\r\n            <Dialog open={open} onClose={handleClose} should>\r\n              <DialogTitle id=\"form-dialog-title\" style={{textAlign:'center'}}>Prescription</DialogTitle>\r\n              <DialogContent dividers>\r\n                <DialogContentText>\r\n                  Please fill the details to make a prescription and send it directly in the chat as an attachment.\r\n                </DialogContentText>\r\n                <TextField\r\n                  autoFocus\r\n                  margin=\"dense\"\r\n                  id=\"symptoms\"\r\n                  label=\"Enter Symptoms\"\r\n                  type=\"text\"\r\n                  name=\"symptoms\"\r\n                  fullWidth\r\n                  value={symp}\r\n                  onChange={(e) => {setSymp(e.target.value)}}\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"Medical History\"\r\n                  label=\"Enter Medical History\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  value={hist}\r\n                  onChange={(e) => {setHist(e.target.value)}}\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"medicine\"\r\n                  label=\"Enter Medicines\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  value={medi}\r\n                  onChange={(e) => {setMedi(e.target.value)}}\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"lab\"\r\n                  label=\"Lab Tests (if any)\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  value={test}\r\n                  onChange={(e) => {setTest(e.target.value)}}\r\n                />\r\n                <TextField\r\n                  margin=\"dense\"\r\n                  id=\"followUp\"\r\n                  label=\"Follow Up Date\"\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  value={followUp}\r\n                  onChange={(e) => {setFollowUp(e.target.value)}}\r\n                />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={preview} color=\"primary\">\r\n                  Preview \r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n\r\n          <div>\r\n            <Dialog\r\n              open={previewOpen}\r\n              onClose={handleClose}\r\n            ><div id=\"pres\">\r\n              <DialogTitle id=\"alert-dialog-title\">Prescription</DialogTitle>\r\n              <DialogContent dividers id=\"pres\">\r\n                <p>SYMPTOMS: {symp}</p><hr />\r\n                <p>MEDICAL HISTORY: {hist}</p><hr />\r\n                <p>MEDICINES: {medi}</p><hr />\r\n                <p>LAB TESTS (if any): {test}</p><hr />\r\n                <p>Follow Up Date: {followUp}</p><hr />\r\n              </DialogContent>\r\n              </div>\r\n              <DialogActions>\r\n              <Button onClick={prevClose} color=\"primary\">\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={handleEdit} color=\"primary\">\r\n                  Edit\r\n                </Button>\r\n                <Button onClick={printdoc} color=\"primary\" autoFocus>\r\n                  Send\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n         </div>\r\n\r\n          <Tooltip title=\"Click To Upload\">\r\n            <Button\r\n              className={styles.altButton}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              onClick={() => document.getElementById('file-upload').click()}\r\n            >\r\n              <AttachIcon />\r\n            </Button>\r\n          </Tooltip>\r\n          <input\r\n            id=\"file-upload\"\r\n            type=\"file\"\r\n            multiple={false}\r\n            style={{ display: 'none' }}\r\n            onChange={(e) => saveImageMessage(e.target.files[0])}\r\n          />\r\n          {/* <Button className={styles.altButton} color=\"primary\" variant=\"outlined\">\r\n              <CameraIcon />\r\n            </Button> */}\r\n          <Button\r\n            className={styles.sendButton}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              if (message.length === 0) return;\r\n              saveMessage(message);\r\n            }}\r\n          >\r\n            Send\r\n          </Button>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\n// dev url\r\n// const SOCKET_ENDPOINT = 'http://localhost:5001';\r\n// const API_ENDPOINT = 'http://localhost:5001/api/chat';\r\n\r\nconst SOCKET_ENDPOINT = 'https://notification.opdlift.com';\r\nconst API_ENDPOINT = 'https://notification.opdlift.com/api/chat';\r\n\r\n// initialize the socket instance\r\nlet socket;\r\n\r\nexport default class Chat extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: '',\r\n      messages: [],\r\n      showEmoji: false,\r\n      uid: '',\r\n      channel: '',\r\n      token: '',\r\n      smallToken: '',\r\n      meetingDetails: '',\r\n    };\r\n  }\r\n  scrollToBottom = () => {\r\n    document\r\n      .getElementById('chatList')\r\n      .scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n    // var objDiv = document.getElementsByClassName(\"MuiCardContent-root\");\r\n    // var objDiv = document.getElementById(\"chatList\");\r\n    // console.log({ objDiv });\r\n    // objDiv.scrollTop = objDiv.scrollHeight;\r\n    // objDiv.scrollTop = objDiv.scrollHeight - objDiv.clientHeight;\r\n  };\r\n  addMessage = (message) => {\r\n    this.setState(\r\n      (state) => {\r\n        // if(message.file){\r\n        //   const isSending = state.messages.filter(m => (m.sending && m.file && m.file.file === message.file.file) ).length != 0;\r\n        //   const new_message = message.createdAt ? message : {...message, createdAt: new Date()};\r\n        //   if(isSending) return { messages: state.messages.map(m => (m.sending && m.file && m.file.file === message.file.file) ? new_message : m ) }\r\n        //   return { messages: [...state.messages, new_message]}\r\n        // }\r\n        const isSending =\r\n          state.messages.filter((m) => m.sending && m.text === message.text)\r\n            .length != 0;\r\n        const new_message = message.createdAt\r\n          ? message\r\n          : { ...message, createdAt: new Date() };\r\n        if (isSending)\r\n          return {\r\n            messages: state.messages.map((m) =>\r\n              m.sending && m.text === message.text ? new_message : m\r\n            ),\r\n          };\r\n        return { messages: [...state.messages, new_message] };\r\n      },\r\n      // { messages: [...this.state.messages, message.createdAt ? message : {...message, createdAt: new Date()}] },\r\n      () => {\r\n        // console.log('Added Message');\r\n        this.scrollToBottom();\r\n      }\r\n    );\r\n  };\r\n  getDetails = async () => {\r\n    try {\r\n      var token = this.props.match.params.token;\r\n      // console.log({ token });\r\n      var result = await axios.post(\r\n        'https://notification.opdlift.com/api/agora/meeting-details',\r\n        // 'http://localhost:5001/api/agora/meeting-details',\r\n        { token }\r\n      );\r\n      var { smallToken, meetingDetails } = result.data;\r\n      var chatName;\r\n      if (smallToken === meetingDetails.dSmallToken) {\r\n        chatName = meetingDetails.patientName;\r\n      } else if (smallToken === meetingDetails.pSmallToken) {\r\n        chatName = meetingDetails.doctorName;\r\n      }\r\n      this.setState({ name: chatName });\r\n\r\n      this.setState(\r\n        {\r\n          uid: result.data.uid,\r\n          channel: result.data.channel,\r\n          room: result.data.channel,\r\n          token: result.data.token,\r\n          smallToken: result.data.smallToken,\r\n          meetingDetails: result.data.meetingDetails,\r\n        },\r\n        () => {\r\n          socket = io(SOCKET_ENDPOINT);\r\n          socket.emit(\r\n            'join',\r\n            {\r\n              sentBy: this.state.uid,\r\n              name: this.state.name,\r\n              room: this.state.room,\r\n            },\r\n            (error) => {\r\n              if (error) {\r\n                console.error(error);\r\n              }\r\n            }\r\n          );\r\n\r\n          socket.on('message', (message) => {\r\n            // console.log('Socket Message: ', message);\r\n            this.addMessage(message);\r\n            // this.setState(\r\n            //   { messages: [...this.state.messages, message.createdAt ? message : {...message, createdAt: new Date()}] },\r\n            //   () => {\r\n            //     console.log(\"socket.on message\");\r\n            //     this.scrollToBottom();\r\n            //   }\r\n            // );\r\n          });\r\n\r\n          socket.on('roomData', ({ users }) => {\r\n            this.setState({ users });\r\n          });\r\n\r\n          this.getMessages();\r\n        }\r\n      );\r\n      // console.log(result.data);\r\n    } catch (err) {\r\n      console.log('err', err.response);\r\n    }\r\n  };\r\n\r\n  uploadFile = async (file) => {\r\n    try {\r\n      var fileType = file.type;\r\n      const fileName = `${file.name}`;\r\n      var data = {\r\n        fileName,\r\n        fileType,\r\n      };\r\n\r\n      var config = {\r\n        method: 'post',\r\n        url: 'https://notification.opdlift.com/api/chat/sign-s3',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: data,\r\n      };\r\n\r\n      var result = await axios(config);\r\n      const { signedRequest, url } = result.data;\r\n      console.log(signedRequest);\r\n\r\n      var putConfig = {\r\n        method: 'put',\r\n        url: signedRequest,\r\n        headers: {\r\n          'Content-Type': fileType,\r\n        },\r\n        data: file,\r\n      };\r\n\r\n      result = await axios(putConfig);\r\n      console.log(url);\r\n      return url;\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n\r\n  saveImageMessage = async (file) => {\r\n    let formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    console.log({ file });\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    this.addMessage({\r\n      text: null,\r\n      createdAt: new Date(),\r\n      sending: true,\r\n      file: {\r\n        file: 'Sending',\r\n        text: 'Filename',\r\n      },\r\n    });\r\n\r\n    try {\r\n      var url = API_ENDPOINT + '/upload-file';\r\n\r\n      // var res = await axios.post(url, formData, {\r\n      //   headers: {\r\n      //     'content-type': 'multipart/form-data',\r\n      //   },\r\n      // });\r\n\r\n      var res = await this.uploadFile(file);\r\n\r\n      console.log({ res });\r\n\r\n      // console.log(res.data);\r\n\r\n      socket.emit(\r\n        'sendFile',\r\n        this.state.channel,\r\n        this.state.uid,\r\n        this.state.meetingDetails.patientName,\r\n\r\n        res,\r\n\r\n        file.name,\r\n        () => {\r\n          this.setState({ message: '' });\r\n        }\r\n      );\r\n\r\n      var data = {\r\n        room: this.state.channel,\r\n        sentBy: this.state.uid,\r\n        name: this.state.name,\r\n        file: res,\r\n        text: file.name,\r\n      };\r\n\r\n      var saveFile = await axios.post(API_ENDPOINT + '/save-file', data);\r\n\r\n      console.log(saveFile.data);\r\n\r\n      this.getMessages();\r\n\r\n      this.setState({ isLoading: false });\r\n    } catch (err) {\r\n      // console.log(err, err.response.data.errors);\r\n\r\n      console.log(err);\r\n\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  getMessages = async () => {\r\n    try {\r\n      var result = await axios.get(API_ENDPOINT + `/${this.state.channel}`);\r\n      this.setState({ messages: result.data }, () => this.scrollToBottom());\r\n    } catch (err) {\r\n      console.log(err.response);\r\n    }\r\n  };\r\n\r\n  saveMessage = (messageText) => {\r\n    this.setState({ message: '' });\r\n\r\n    // console.log('saveMessage');\r\n\r\n    // console.log({ messageText });\r\n\r\n    if (this.state.message) {\r\n      this.addMessage({\r\n        text: this.state.message,\r\n        createdAt: new Date(),\r\n        sending: true,\r\n        file: null,\r\n      });\r\n      socket.emit(\r\n        'sendMessage',\r\n        this.state.channel,\r\n        this.state.uid,\r\n        this.state.meetingDetails.patientName,\r\n        this.state.message,\r\n        () => {\r\n          this.setState({ message: '' });\r\n          this.scrollToBottom();\r\n        }\r\n      );\r\n    }\r\n    // firebase\r\n    //   .firestore()\r\n    //   .collection(\"messages\")\r\n    //   .add({\r\n    //     room: this.state.channel,\r\n    //     sentBy: this.state.uid,\r\n    //     text: messageText,\r\n    //     timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    //   })\r\n    //   .catch(function (error) {\r\n    //     console.error(\"Error writing new message to database\", error);\r\n    //   });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDetails();\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state.messages);\r\n    // console.log(this.state.messages);\r\n\r\n    return (\r\n      <ChatUI\r\n        uid={this.state.uid}\r\n        messages={this.state.messages}\r\n        smallToken={this.state.smallToken}\r\n        meetingDetails={this.state.meetingDetails}\r\n        showEmoji={this.state.showEmoji}\r\n        message={this.state.message}\r\n        setState={this.setState.bind(this)}\r\n        saveImageMessage={this.saveImageMessage.bind(this)}\r\n        saveMessage={this.saveMessage.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import Firebase from \"firebase\";\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCVBOk70HwuqqIor4h8qCPDNkoQS_iZSOw\",\r\n  authDomain: \"newopdlift.firebaseapp.com\",\r\n  databaseURL: \"https://newopdlift.firebaseio.com\",\r\n  projectId: \"newopdlift\",\r\n  storageBucket: \"newopdlift.appspot.com\",\r\n  messagingSenderId: \"287274948468\",\r\n  appId: \"1:287274948468:web:dbfbe2d4a8aba2d63fbe21\",\r\n  measurementId: \"G-3P9KH84QHQ\",\r\n};\r\n// Initialize Firebase\r\nvar firebase = Firebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\nexport default firebase;\r\n","import React from 'react';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport theme from './settings/theme';\r\nimport Chat from './Pages/Chat/Chat';\r\nimport FireBase from './Config/FireBase';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <ThemeProvider theme={theme}>\r\n          <Router>\r\n            <Route exact path=\"/:token\" component={Chat}/>\r\n          </Router>\r\n        </ThemeProvider>\r\n      </MuiPickersUtilsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}